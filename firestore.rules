rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isFamilyMember(familyId) {
      return isAuthenticated() && 
             (
               // Either the user is in the members array
               exists(/databases/$(database)/documents/families/$(familyId)) &&
               get(/databases/$(database)/documents/families/$(familyId)).data.members.hasAny([request.auth.uid])
               ||
               // Or the user has this familyId in their profile
               exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
               get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyId == familyId
             );
    }

    function hasFamilyId(familyId) {
      return isAuthenticated() &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyId == familyId;
    }

    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated() && 
                 (
                   request.auth.uid == userId || 
                   (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyId != null)
                 );
      
      // Allow listing users with the same familyId as the requesting user
      allow list: if isAuthenticated() &&
                 exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                 get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyId != null;
      
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
    }

    // Family invites
    match /familyInvites/{inviteId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() &&
                    (request.resource.data.familyId == null || isFamilyMember(request.resource.data.familyId) || 
                     hasFamilyId(request.resource.data.familyId));
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated() && (
                      hasFamilyId(resource.data.familyId) || 
                      isFamilyMember(resource.data.familyId)
                    );
    }

    // New direct path invites
    match /invites/{code} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() &&
                    (request.resource.data.familyId == null || isFamilyMember(request.resource.data.familyId) || 
                     hasFamilyId(request.resource.data.familyId));
      allow update: if isAuthenticated() && (
                      request.resource.data.familyId == resource.data.familyId &&
                      (request.resource.data.acceptedBy == request.auth.uid || 
                       request.resource.data.status == 'accepted' ||
                       isFamilyMember(resource.data.familyId) ||
                       hasFamilyId(resource.data.familyId))
                    );
      allow delete: if isAuthenticated() && (
                      hasFamilyId(resource.data.familyId) || 
                      isFamilyMember(resource.data.familyId)
                    );
    }

    // Families
    match /families/{familyId} {
      allow read: if isAuthenticated() && 
                 (
                   resource.data.members.hasAny([request.auth.uid]) || 
                   hasFamilyId(familyId) ||
                   exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyId == familyId
                 );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
                   (
                     resource.data.members.hasAny([request.auth.uid]) || 
                     hasFamilyId(familyId) ||
                     exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyId == familyId ||
                     request.resource.data.members.hasAny([request.auth.uid])
                   );

      // Family members (including children)
      match /members/{memberId} {
        allow read: if isAuthenticated() && 
                   (
                     resource == null || 
                     isFamilyMember(familyId) || 
                     exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyId == familyId
                   );
        allow write: if isAuthenticated() && 
                    (
                      resource == null || 
                      isFamilyMember(familyId) || 
                      exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyId == familyId
                    );
      }
      
      // SubUsers (legacy child profiles)
      match /subUsers/{subUserId} {
        allow read: if isAuthenticated() && 
                   (
                     resource == null || 
                     isFamilyMember(familyId) || 
                     exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyId == familyId
                   );
        allow write: if isAuthenticated() && 
                    (
                      resource == null || 
                      isFamilyMember(familyId) || 
                      exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyId == familyId
                    );
      }

      // Family rewards
      match /rewards/{rewardId} {
        allow read: if isAuthenticated();
        allow write: if isAuthenticated() && 
                    (resource == null || isFamilyMember(resource.data.familyId) || hasFamilyId(resource.data.familyId));
      }
      
      // Family redemptions
      match /redemptions/{redemptionId} {
        allow read: if isAuthenticated() && 
                   (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
        allow write: if isAuthenticated() && 
                    (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
      }
      
      // Family chores
      match /chores/{choreId} {
        allow read: if isAuthenticated();
        allow write: if isAuthenticated() && 
                    (resource == null || isFamilyMember(resource.data.familyId) || hasFamilyId(resource.data.familyId));
      }
      
      // Family events
      match /events/{eventId} {
        allow read: if isAuthenticated() && 
                   (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
        allow write: if isAuthenticated() && 
                    (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
      }
      
      // Family meal plans
      match /mealPlans/{documentId} {
        allow read: if isAuthenticated() && 
                   (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
        allow write: if isAuthenticated() && 
                    (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
        
        match /weeks/{weekId} {
          allow read: if isAuthenticated() && 
                     (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
          allow write: if isAuthenticated() && 
                      (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
        }
      }
      
      // Family grocery lists
      match /groceryLists/{listId} {
        allow read: if isAuthenticated() && 
                   (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
        allow write: if isAuthenticated() && 
                    (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
      }
    }
    
    // Legacy direct collections (to maintain backward compatibility)
    // Remove these after migrating all data to family subcollections
    
    match /chores/{choreId} {
      allow read: if isAuthenticated() && 
                 (resource == null || isFamilyMember(resource.data.familyId) || 
                  hasFamilyId(resource.data.familyId));
      allow write: if isAuthenticated() && 
                  (resource == null || isFamilyMember(resource.data.familyId) || 
                   hasFamilyId(resource.data.familyId));
    }

    match /events/{eventId} {
      allow read: if isAuthenticated() && 
                 (resource == null || isFamilyMember(resource.data.familyId) ||
                  hasFamilyId(resource.data.familyId));
      allow write: if isAuthenticated() && 
                  (resource == null || isFamilyMember(resource.data.familyId) ||
                   hasFamilyId(resource.data.familyId));
    }

    // Allow users to read/write their own calendar events
    match /userEvents/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow write: if isAuthenticated() && request.auth.uid == userId;
      
      match /events/{eventId} {
        allow read: if isAuthenticated() && request.auth.uid == userId;
        allow write: if isAuthenticated() && request.auth.uid == userId;
      }
    }
    
    // Allow access to the daily agenda data (consolidates events, chores, meals)
    match /dailyAgenda/{agendaId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only backend should write to this
    }

    // Family calendar events collection (legacy)
    match /familyEvents/{familyId} {
      allow read: if isAuthenticated() && 
                 (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
      allow write: if isAuthenticated() && 
                  (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
      
      match /events/{eventId} {
        allow read: if isAuthenticated() && 
                   (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
        allow write: if isAuthenticated() && 
                    (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
      }
    }

    // Legacy meal planner rules
    match /mealPlans/{familyId} {
      allow read: if isAuthenticated() && 
                 (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
      allow write: if isAuthenticated() && 
                  (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
      
      match /weeks/{weekId} {
        allow read: if isAuthenticated() && 
                   (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
        allow write: if isAuthenticated() && 
                    (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
      }
    }

    // Legacy grocery list rules
    match /groceryLists/{familyId} {
      allow read: if isAuthenticated() && 
                 (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
      allow write: if isAuthenticated() && 
                  (resource == null || isFamilyMember(familyId) || hasFamilyId(familyId));
    }

    // Legacy rewards store rules
    match /rewards/{rewardId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                  (resource == null || isFamilyMember(resource.data.familyId) || hasFamilyId(resource.data.familyId));
    }

    // Legacy redemption history rules
    match /redemptions/{redemptionId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                  (resource == null || isFamilyMember(resource.data.familyId) || hasFamilyId(resource.data.familyId));
    }
  }
} 